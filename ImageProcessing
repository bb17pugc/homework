# STEP 1: Import package code
%matplotlib inline
import matplotlib
import os
import numpy as np
import cv2
from matplotlib import pyplot as plt
from plantcv import plantcv as pcv


# STEP 2: Set global variables
matplotlib.rcParams["figure.figsize"] = [8, 8]
device = 0                                   # Workflow step counter
debug = 'plot'                               # Plot debug images to the notebook
rgb_img = 'myimage1.png'  # Image filename


# STEP 3: Read RGB image and plot it to the notebook
# Inputs:
#    filename = name of image file
#    debug    = None, print (to file), or plot (to notebook)
img, path, filename = pcv.readimage(filename=rgb_img , mode='rgb')


# Convert RGB to HSV and extract the saturation channel

# Inputs:
#   rgb_image - RGB image data 
#   channel - Split by 'h' (hue), 's' (saturation), or 'v' (value) channel
s = pcv.rgb2gray_hsv(rgb_img=img, channel='s')

gray = pcv.rgb2gray(rgb_img=img)
# pcv.plot_image(gray)

img_binary = pcv.threshold.binary(gray_img=s, threshold=85, max_value=255, object_type='light')
# pcv.plot_image(img_binary)

s_mblur = pcv.median_blur(gray_img=img_binary, ksize=5)
# pcv.plot_image(s_mblur)

s_cnt = pcv.median_blur(gray_img=img_binary, ksize=5)
# pcv.plot_image(s_cnt)


# Convert RGB to LAB and extract the Blue channel

# Input:
#   rgb_img - RGB image data 
#   channel- Split by 'l' (lightness), 'a' (green-magenta), or 'b' (blue-yellow) channel
b = pcv.rgb2gray_lab(rgb_img=img, channel='a')

# Threshold the blue image
b_thresh = pcv.threshold.binary(gray_img=b, threshold=160, max_value=255, 
                                object_type='light')
b_cnt = pcv.threshold.binary(gray_img=b, threshold=160, max_value=255, 
                             object_type='light')
# pcv.plot_image(b)

#                 """ Now we'll focus on masking the image from Figure """ 


# Apply Mask (for VIS images, mask_color=white)

    # Inputs:
    #   rgb_img - RGB image data 
    #   mask - Binary mask image data 
    #   mask_color - 'white' or 'black' 
bs = pcv.logical_or(bin_img1=s_mblur, bin_img2=b_cnt)
masked = pcv.apply_mask(img=img, mask=bs, mask_color='white')
# pcv.plot_image(masked)

#                 """ Now we'll focus on capturing the plant in the masked image from Figure """ 
    
# Convert RGB to LAB and extract the Green-Magenta and Blue-Yellow channels
masked_a = pcv.rgb2gray_lab(rgb_img=masked, channel='a')
masked_b = pcv.rgb2gray_lab(rgb_img=masked, channel='b')

# Threshold the green-magenta and blue images
maskeda_thresh = pcv.threshold.binary(gray_img=masked_a, threshold=115, 
                                  max_value=255, object_type='dark')
maskeda_thresh1 = pcv.threshold.binary(gray_img=masked_a, threshold=135, 
                                       max_value=255, object_type='light')
maskedb_thresh = pcv.threshold.binary(gray_img=masked_b, threshold=128, 
                                      max_value=255, object_type='light')

# Join the thresholded saturation and blue-yellow images (OR)
ab1 = pcv.logical_or(bin_img1=maskeda_thresh, bin_img2=maskedb_thresh)
ab = pcv.logical_or(bin_img1=maskeda_thresh1, bin_img2=ab1)

# Fill small objects
# Inputs: 
#   bin_img - Binary image data 
#   size - Minimum object area size in pixels (must be an integer), and smaller objects will be filled
ab_fill = pcv.fill(bin_img=ab, size=200)

# Apply mask (for VIS images, mask_color=white)
masked2 = pcv.apply_mask(img=masked, mask=ab_fill, mask_color='white')
pcv.plot_image(masked2)    
    
    

# binary_img = pcv.median_blur(gray_img=img_binary, ksize=5)
# fill_image = pcv.fill(bin_img=img_binary, size=200)
# pcv.params.debug = "print"
# id_objects, obj_hierarchy = pcv.find_objects(img=binary_img, mask=fill_image)

# print(obj_hierarchy)
# pcv.plot_image(gray)
